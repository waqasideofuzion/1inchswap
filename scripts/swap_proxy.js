const hre = require("hardhat")
const ethers = hre.ethers

async function main() {

    [this.deployer] = await ethers.getSigners();

    const data = "0x12aa3caf000000000000000000000000170d2ed0b2a5d9f450652be814784f964749ffa400000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000e9e7cea3dedca5984780bafc599bd69add087d56000000000000000000000000170d2ed0b2a5d9f450652be814784f964749ffa4000000000000000000000000c94c7165677553ad24191003f431dcd20780f56e0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000dbce04d507c62720000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000006302a00000000000000000000000000000000000000000000000000dbce04d507c6272ee63c1e581c98f01bf2141e1140ef8f8cad99d4b021d10718f55d398326f99059ff775485246999027b31979551111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000000000cfee7c08"

    const OneInchSwapFactory = await hre.ethers.getContractFactory("SwapProxy");

    //deploy  admin registry smart contract
    const deploy1InchSwapProxy = await OneInchSwapFactory.deploy("0x1111111254fb6c44bac0bed2854e76f90643097d");
    await deploy1InchSwapProxy.deployed()

    console.log('One 1inch Contract Address: ', deploy1InchSwapProxy.address);

    await deploy1InchSwapProxy.swap(data);

    // await new Promise((resolve) => setTimeout(resolve, 20000));

    // await hre.run("verify:verify", {
    //     address: deploy1InchSwapProxy.address,
    //     constructorArguments: ["0x1111111254fb6c44bac0bed2854e76f90643097d"],
    // });


}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error)
        process.exit(1)
    })